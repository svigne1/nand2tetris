
/** It is used both as a body part of the snake as well as it's food */
class SnakeCell {
    field int x, y;
    field boolean visible; 
    field SnakeCell next;
    field int size, spacing;             

    /* Creates a SnakeCell. */
    constructor SnakeCell new(int _x, int _y, SnakeCell _next) {
        let x = _x;
        let y = _y;
        let next = _next;
        let size = 14;
        let spacing = 2;
        let visible = false;
        return this;
    }

    /** Draws the snake on the screen. */
    method void draw() {
        // White Background
        // do Screen.setColor(false);
        // do Screen.drawRectangle(x, y, x + size + 1, y + size + 1);
        // Black Cell
        do Screen.setColor(visible);
        do Screen.drawRectangle(x, y, x + size, y + size);

        return;
    }
    
    /** Reverses the visible from hidden to visible & vice-versa */
    method void toggle() {
        let visible = ~visible;
        do draw();
        return;
    }

    method boolean sameAs(SnakeCell b) { 
        if ((x = b.getX()) & (y = b.getY())){
            return true;
        } 
        return false;
    }

    method void moveNextPosition(int direction){

        // Up
        if (direction = 1) {
            let y = y - size - spacing;
        }
        // Down
        if (direction = -1) {
            let y = y + size + spacing;
        }
        // Right
        if (direction = 2) {
            let x = x + size + spacing;
        }
        // Left
        if (direction = -2) {
            let x = x - size - spacing;
        }

        if (x = -16){ 
            let x = 496;
        }

        if (x = 512){ 
            let x = 0;
        }
        
        if (y = -16){ 
            let y = 240;
        }
        
        if (y = 256){ 
            let y = 0;
        }

        return;
    }
    
    /** Disposes the whole snake starting from tail */
    method void dispose() {
        if (~(next = null)) {
            do next.dispose();
        }
        // Uses an OS routine to recycle this object.
        do Memory.deAlloc(this);
        return;
    }
    
    /** Get & Set */
    method int getX() { return x; }
    method int getY() { return y; }
    method SnakeCell getNext() { return next; }
    method boolean getvisible() { return visible; }
    method void setX(int v) { 
        let x=v;
        return;
    }
    method void setY(int v) { 
        let y=v;
        return;
    }
    method void setNext(SnakeCell v) { 
        let next = v;
        return;  
    }
    method void setVisible(boolean v) { 
        let visible = v;
        return;  
    }

}

@261
D=A
@0
M=D
@Sys.init
0;JMP
// function Sys.init 0
(Sys.init)
@0
D=A
@13
M=D
(Sys.init.initialize_local_vars.begin)
@13
D=M
@Sys.init.initialize_local_vars.end
D;JEQ
@13
M=M-1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.init.initialize_local_vars.begin
0;JMP
(Sys.init.initialize_local_vars.end)
// push constant 4000
@4000
D=A
@13
M=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
// push constant 5000
@5000
D=A
@13
M=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 1
@THAT
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
// call Sys.main 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.init.12.finish.address
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
(Sys.init.12.finish.address)
// pop temp 1
@5
D=A
@1
A=D+A
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
// label LOOP
(Sys.init.LOOP)
// goto LOOP
@Sys.init.LOOP
0;JMP
// function Sys.main 5
(Sys.main)
@5
D=A
@13
M=D
(Sys.main.initialize_local_vars.begin)
@13
D=M
@Sys.main.initialize_local_vars.end
D;JEQ
@13
M=M-1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.main.initialize_local_vars.begin
0;JMP
(Sys.main.initialize_local_vars.end)
// push constant 4001
@4001
D=A
@13
M=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
// push constant 5001
@5001
D=A
@13
M=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 1
@THAT
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
// push constant 200
@200
D=A
@13
M=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 1
@LCL
D=M
@1
A=D+A
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
// push constant 40
@40
D=A
@13
M=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 2
@LCL
D=M
@2
A=D+A
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
// push constant 6
@6
D=A
@13
M=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 3
@LCL
D=M
@3
A=D+A
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
// push constant 123
@123
D=A
@13
M=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Sys.add12 1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.main.37.finish.address
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
(Sys.main.37.finish.address)
// pop temp 0
@5
D=A
@0
A=D+A
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
// push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
AM=M-1
D=M
@13
M=D
@SP
AM=M-1
D=M
@13
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
AM=M-1
D=M
@13
M=D
@SP
AM=M-1
D=M
@13
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
AM=M-1
D=M
@13
M=D
@SP
AM=M-1
D=M
@13
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
AM=M-1
D=M
@13
M=D
@SP
AM=M-1
D=M
@13
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// return
@SP
A=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@LCL
D=M
@13
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@13
AM=M-1
A=M
0;JMP
// function Sys.add12 0
(Sys.add12)
@0
D=A
@13
M=D
(Sys.add12.initialize_local_vars.begin)
@13
D=M
@Sys.add12.initialize_local_vars.end
D;JEQ
@13
M=M-1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.add12.initialize_local_vars.begin
0;JMP
(Sys.add12.initialize_local_vars.end)
// push constant 4002
@4002
D=A
@13
M=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
// push constant 5002
@5002
D=A
@13
M=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 1
@THAT
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
// push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 12
@12
D=A
@13
M=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
AM=M-1
D=M
@13
M=D
@SP
AM=M-1
D=M
@13
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// return
@SP
A=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@LCL
D=M
@13
M=D
@13
AM=M-1
D=M
@THAT
M=D
@13
AM=M-1
D=M
@THIS
M=D
@13
AM=M-1
D=M
@ARG
M=D
@13
AM=M-1
D=M
@LCL
M=D
@13
AM=M-1
A=M
0;JMP
